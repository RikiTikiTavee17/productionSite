/**
 * @fileoverview gRPC-Web generated client stub for dish_v1
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: dish.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')
const proto = {};
proto.note_v1 = require('./note_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.note_v1.NoteV1Client =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.note_v1.NoteV1PromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.CreateRequest,
 *   !proto.note_v1.CreateResponse>}
 */
const methodDescriptor_NoteV1_Create = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/Create',
  grpc.web.MethodType.UNARY,
  proto.note_v1.CreateRequest,
  proto.note_v1.CreateResponse,
  /**
   * @param {!proto.note_v1.CreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.note_v1.CreateResponse.deserializeBinary
);


/**
 * @param {!proto.note_v1.CreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.note_v1.CreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.note_v1.CreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/Create',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Create,
      callback);
};


/**
 * @param {!proto.note_v1.CreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.note_v1.CreateResponse>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/Create',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.GetRequest,
 *   !proto.note_v1.GetResponse>}
 */
const methodDescriptor_NoteV1_Get = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/Get',
  grpc.web.MethodType.UNARY,
  proto.note_v1.GetRequest,
  proto.note_v1.GetResponse,
  /**
   * @param {!proto.note_v1.GetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.note_v1.GetResponse.deserializeBinary
);


/**
 * @param {!proto.note_v1.GetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.note_v1.GetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.note_v1.GetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/Get',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Get,
      callback);
};


/**
 * @param {!proto.note_v1.GetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.note_v1.GetResponse>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/Get',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.ListRequest,
 *   !proto.note_v1.ListResponse>}
 */
const methodDescriptor_NoteV1_List = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/List',
  grpc.web.MethodType.UNARY,
  proto.note_v1.ListRequest,
  proto.note_v1.ListResponse,
  /**
   * @param {!proto.note_v1.ListRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.note_v1.ListResponse.deserializeBinary
);


/**
 * @param {!proto.note_v1.ListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.note_v1.ListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.note_v1.ListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/List',
      request,
      metadata || {},
      methodDescriptor_NoteV1_List,
      callback);
};


/**
 * @param {!proto.note_v1.ListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.note_v1.ListResponse>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/List',
      request,
      metadata || {},
      methodDescriptor_NoteV1_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.UpdateRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_NoteV1_Update = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/Update',
  grpc.web.MethodType.UNARY,
  proto.note_v1.UpdateRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.note_v1.UpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.note_v1.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/Update',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Update,
      callback);
};


/**
 * @param {!proto.note_v1.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/Update',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.DeleteRequest,
 *   !proto.google.protobuf.Empty>}
 */
const methodDescriptor_NoteV1_Delete = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/Delete',
  grpc.web.MethodType.UNARY,
  proto.note_v1.DeleteRequest,
  google_protobuf_empty_pb.Empty,
  /**
   * @param {!proto.note_v1.DeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  google_protobuf_empty_pb.Empty.deserializeBinary
);


/**
 * @param {!proto.note_v1.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.google.protobuf.Empty)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.google.protobuf.Empty>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/Delete',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Delete,
      callback);
};


/**
 * @param {!proto.note_v1.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.google.protobuf.Empty>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/Delete',
      request,
      metadata || {},
      methodDescriptor_NoteV1_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.CreatePersonReqest,
 *   !proto.note_v1.CreatePersonResponse>}
 */
const methodDescriptor_NoteV1_CreatePerson = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/CreatePerson',
  grpc.web.MethodType.UNARY,
  proto.note_v1.CreatePersonReqest,
  proto.note_v1.CreatePersonResponse,
  /**
   * @param {!proto.note_v1.CreatePersonReqest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.note_v1.CreatePersonResponse.deserializeBinary
);


/**
 * @param {!proto.note_v1.CreatePersonReqest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.note_v1.CreatePersonResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.note_v1.CreatePersonResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.createPerson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/CreatePerson',
      request,
      metadata || {},
      methodDescriptor_NoteV1_CreatePerson,
      callback);
};


/**
 * @param {!proto.note_v1.CreatePersonReqest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.note_v1.CreatePersonResponse>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.createPerson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/CreatePerson',
      request,
      metadata || {},
      methodDescriptor_NoteV1_CreatePerson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.note_v1.LogInPersonRequest,
 *   !proto.note_v1.LogInPersonResponce>}
 */
const methodDescriptor_NoteV1_LogInPerson = new grpc.web.MethodDescriptor(
  '/dish_v1.NoteV1/LogInPerson',
  grpc.web.MethodType.UNARY,
  proto.note_v1.LogInPersonRequest,
  proto.note_v1.LogInPersonResponce,
  /**
   * @param {!proto.note_v1.LogInPersonRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.note_v1.LogInPersonResponce.deserializeBinary
);


/**
 * @param {!proto.note_v1.LogInPersonRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.note_v1.LogInPersonResponce)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.note_v1.LogInPersonResponce>|undefined}
 *     The XHR Node Readable Stream
 */
proto.note_v1.NoteV1Client.prototype.logInPerson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/dish_v1.NoteV1/LogInPerson',
      request,
      metadata || {},
      methodDescriptor_NoteV1_LogInPerson,
      callback);
};


/**
 * @param {!proto.note_v1.LogInPersonRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.note_v1.LogInPersonResponce>}
 *     Promise that resolves to the response
 */
proto.note_v1.NoteV1PromiseClient.prototype.logInPerson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/dish_v1.NoteV1/LogInPerson',
      request,
      metadata || {},
      methodDescriptor_NoteV1_LogInPerson);
};


module.exports = proto.note_v1;

