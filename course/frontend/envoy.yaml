admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      format: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %RESPONSE_CODE% %UPSTREAM_CLUSTER% %UPSTREAM_HOST%\n"
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "OPTIONS"
                          direct_response:
                            status: 200
                            body:
                              inline_string: "OK"
                          response_headers_to_add:
                            - header:
                                key: "Access-Control-Allow-Methods"
                                value: "GET, POST, OPTIONS"
                            - header:
                                key: "Access-Control-Allow-Headers"
                                value: "content-type, x-grpc-web, x-user-agent"
                            - header:
                                key: "Access-Control-Expose-Headers"
                                value: "grpc-status, grpc-message"
                        - match:
                            prefix: "/"
                          route:
                            cluster: grpc_service
                      response_headers_to_add:
                        - header:
                            key: "Access-Control-Allow-Origin"
                            value: "http://localhost:3000"
                        - header:
                            key: "Access-Control-Expose-Headers"
                            value: "grpc-status, grpc-message"
                http_filters:
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: grpc_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      load_assignment:
        cluster_name: grpc_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: grpc-server
                      port_value: 50051